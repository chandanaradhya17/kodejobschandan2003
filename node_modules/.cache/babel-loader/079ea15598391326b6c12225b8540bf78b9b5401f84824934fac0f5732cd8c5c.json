{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chand\\\\KodJobs\\\\src\\\\components\\\\JobList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport JobCard from './JobCard';\nimport axios from 'axios';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport './JobList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JobList() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchJobs = async () => {\n      const options = {\n        method: 'GET',\n        url: 'https://jsearch.p.rapidapi.com/search',\n        params: {\n          query: 'developer in India',\n          page: '1',\n          num_pages: '1'\n        },\n        headers: {\n          'X-RapidAPI-Key': '87642e8656msh75f1750380c12d7p1bb310jsne0722bd56669',\n          'X-RapidAPI-Host': 'jsearch.p.rapidapi.com'\n        }\n      };\n      try {\n        const response = await axios.request(options);\n        console.log('API Response:', response.data); // Debug log\n\n        if (response.data && response.data.data) {\n          const processedJobs = response.data.data.map(job => ({\n            id: job.job_id || Math.random().toString(),\n            employer_name: job.employer_name || 'Company Name Not Available',\n            employer_logo: job.employer_logo || 'https://via.placeholder.com/50',\n            job_title: job.job_title || 'Position Not Specified',\n            job_city: job.job_city || 'Location Not Specified',\n            job_country: job.job_country || 'India',\n            job_required_skills: job.job_required_skills && job.job_required_skills.length > 0 ? job.job_required_skills : ['Skills not specified'],\n            estimated_salary: job.job_min_salary ? `${(job.job_min_salary / 100000).toFixed(1)} LPA` : job.job_max_salary ? `${(job.job_max_salary / 100000).toFixed(1)} LPA` : 'Not Disclosed',\n            job_posted_at_timestamp: job.job_posted_at_timestamp || new Date().toISOString(),\n            job_apply_link: job.job_apply_link || '#'\n          }));\n          setJobs(processedJobs);\n          setLoading(false);\n        } else {\n          throw new Error('Invalid data structure received from API');\n        }\n      } catch (error) {\n        var _error$response, _error$response$data;\n        console.error('Error details:', error);\n        setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || 'Failed to load jobs. Please try again later.');\n        setLoading(false);\n      }\n    };\n    fetchJobs();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading jobs...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Error Loading Jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        className: \"retry-button\",\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n  if (!jobs.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-jobs-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No Jobs Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No job listings are currently available. Please try again later.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"job-list-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-list\",\n      children: jobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n        job: job\n      }, job.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(JobList, \"TaMk7fC+hMP36HC9VvgGyvmwP10=\");\n_c = JobList;\nexport default JobList;\nvar _c;\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"names":["React","useState","useEffect","JobCard","axios","CircularProgress","jsxDEV","_jsxDEV","JobList","_s","jobs","setJobs","loading","setLoading","error","setError","fetchJobs","options","method","url","params","query","page","num_pages","headers","response","request","console","log","data","processedJobs","map","job","id","job_id","Math","random","toString","employer_name","employer_logo","job_title","job_city","job_country","job_required_skills","length","estimated_salary","job_min_salary","toFixed","job_max_salary","job_posted_at_timestamp","Date","toISOString","job_apply_link","Error","_error$response","_error$response$data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","reload","_c","$RefreshReg$"],"sources":["C:/Users/chand/KodJobs/src/components/JobList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport JobCard from './JobCard';\r\nimport axios from 'axios';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport './JobList.css';\r\n\r\nfunction JobList() {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchJobs = async () => {\r\n      const options = {\r\n        method: 'GET',\r\n        url: 'https://jsearch.p.rapidapi.com/search',\r\n        params: {\r\n          query: 'developer in India',\r\n          page: '1',\r\n          num_pages: '1'\r\n        },\r\n        headers: {\r\n          'X-RapidAPI-Key': '87642e8656msh75f1750380c12d7p1bb310jsne0722bd56669',\r\n          'X-RapidAPI-Host': 'jsearch.p.rapidapi.com'\r\n        }\r\n      };\r\n\r\n      try {\r\n        const response = await axios.request(options);\r\n        console.log('API Response:', response.data); // Debug log\r\n\r\n        if (response.data && response.data.data) {\r\n          const processedJobs = response.data.data.map(job => ({\r\n            id: job.job_id || Math.random().toString(),\r\n            employer_name: job.employer_name || 'Company Name Not Available',\r\n            employer_logo: job.employer_logo || 'https://via.placeholder.com/50',\r\n            job_title: job.job_title || 'Position Not Specified',\r\n            job_city: job.job_city || 'Location Not Specified',\r\n            job_country: job.job_country || 'India',\r\n            job_required_skills: \r\n              (job.job_required_skills && job.job_required_skills.length > 0) \r\n                ? job.job_required_skills \r\n                : ['Skills not specified'],\r\n            estimated_salary: \r\n              job.job_min_salary \r\n                ? `${(job.job_min_salary/100000).toFixed(1)} LPA`\r\n                : job.job_max_salary \r\n                  ? `${(job.job_max_salary/100000).toFixed(1)} LPA`\r\n                  : 'Not Disclosed',\r\n            job_posted_at_timestamp: job.job_posted_at_timestamp || new Date().toISOString(),\r\n            job_apply_link: job.job_apply_link || '#'\r\n          }));\r\n\r\n          setJobs(processedJobs);\r\n          setLoading(false);\r\n        } else {\r\n          throw new Error('Invalid data structure received from API');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error details:', error);\r\n        setError(\r\n          error.response?.data?.message || \r\n          error.message || \r\n          'Failed to load jobs. Please try again later.'\r\n        );\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchJobs();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <CircularProgress />\r\n        <p>Loading jobs...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"error-message\">\r\n        <h3>Error Loading Jobs</h3>\r\n        <p>{error}</p>\r\n        <button \r\n          onClick={() => window.location.reload()} \r\n          className=\"retry-button\"\r\n        >\r\n          Retry\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!jobs.length) {\r\n    return (\r\n      <div className=\"no-jobs-message\">\r\n        <h3>No Jobs Found</h3>\r\n        <p>No job listings are currently available. Please try again later.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"job-list-container\">\r\n      <div className=\"job-list\">\r\n        {jobs.map((job) => (\r\n          <JobCard key={job.id} job={job} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}